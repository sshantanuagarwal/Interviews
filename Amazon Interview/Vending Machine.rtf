{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1) Withdrawl Path:\
\
Client \
   |\
Input -> ItemId\
   |\
Money Intake\
   |\
Processing/Validation\
   |\
Output -> itemId\
   |\
Update database\
\
2) Insert Path:\
\
Input Items\
    |\
Update database\
\
3) Alarm System / Security System\
\
4) Validating Money\
Change of country/notes(demonetization)\
\
\
\
Enum Stage \{\
    InputDataStage;\
    InputMoneyStage\
    OutputStage,\
    DBUpdate,\
\}\
\
class Position \{\
    int x\
    int y\
\}\
class Item() \{\
    int itemId;\
    string name;\
    double weight;\
    Position point;\
    int count;\
    int price;\
\}\
\
class Database() \{\
    items : List of Item;\
    \
    void addItem( ) :\
        // Add a new item\
    Item removeItem():\
    \
    def incrementCounter( Item )\
    \
    def decrementCounter( Item )\
\}\
\
Enum CurrencyType() \{\
    Note,\
    Coin,\
\}\
\
class Money() \{\
    int cost;\
\}\
class Currency() \{\
    int amount;\
    CurrencyType type;\
    int weight;\
\}\
\
class Input() \{\
    Item itemId;\
    Money m;\
\}\
\
class MoneyValidator() \{\
    currencyList : List of currencies;\
    \
    bool isValidCurrency():\
    \
    int netAmountInserted():\
    \
    bool isNetAmountCorrect():\
\}\
\
class Output() \{\
    Item itemId;\
\}\
\
class GetterMediator() \{\
    Stage stage;\
    \
    def __init__():\
        Input();\
        MoneyValidator();\
        Output();\
        Database();\
    \
    def switchStage( Stage ):\
\}\
\
class Terminator():\
    def cleanup()\
    \
class SetterMediator() \{\
    \
    def __init__ ():\
        Input();\
        Database();\
        Display();\
\}\
\
class Client() \{\
    Mediator m;\
\}\
\
\
}