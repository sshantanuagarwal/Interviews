{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0\c84706;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
\
Enum  Category\{\
    Good\
    Bad\
\}\
\
Enum Websites \{\
    W1, # IMDB\
    W2, # \
    W3,\
    W4,\
    \
    numWebsites\
\}\
\
\
class Input():\
    websiteList : list of websites\
    \
    def getInput():\
        # Iterate of Websites\
        # Create Review class\
        # Update Relevant movie\
        Review r( id, data, rating )\
    '''\
    def poller( time ):\
        \
        # For pre-processing\
    \
    t+ 2 => poller():\
    '''\
        \
class Website( Input ):\
    def updateWebsite():\
        # update the 'websiteList'\
\
class Review():\
    review-id : int \
    data : string\
    rating : double\
    \
class Movie( movieName ) :\
    movieId : int\
    movieName : String\
    movieRating : double\
    movieReviews : List of Review classes\
    movieReviewsByWeb : Dictionary: key > wesite , value > rating \
    \
    def getInput():\
        # Return movieReviews\
    \
class Processor() :\
    category :  Dictionary -> key : Category, value : Review\
    \
    def getAggregateRating( Movie movieName ):\
        Movie m( movieName );\
        m.getInput();\
        double sum = 0;\
        len = m.movieReviews.length()\
        for_each( review in m.movieReviews ):\
            sum += review.rating;\
        int review = sum / len;\
        return review;\
        \
    def getAggregateRatingByWesite( Movie movieName ):\
        Movie m( movieName );\
        m.getInput();\
        double sum = 0;\
        len = m.movieReviews.length()\
        for_each( review in m.movieReviewsByWeb.values() ):\
            sum += review.rating;\
        int review = sum / len;\
        return review;       \
        \
    def sortRatings( category ):\
        \
    def sortRatings( ratings ):\
    \
    def getInfo( Movie ):\
\
# Client / End User\
class Search() :\
    movies : List of movies based on search\
    def sortBasePreference : \
        # Time\
        # Popularity\
                 # Rating\
    \
class Client():\
    Processor m ;\
    def getInfo( Movie ):\
        \
    m.getInfo()}