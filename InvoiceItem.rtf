{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red157\green0\blue210;\red255\green255\blue255;\red0\green0\blue0;
\red32\green108\blue135;\red0\green0\blue255;\red0\green0\blue109;\red101\green76\blue29;\red15\green112\blue1;
\red144\green1\blue18;\red107\green0\blue1;\red251\green0\blue7;\red19\green118\blue70;}
{\*\expandedcolortbl;;\cssrgb\c68627\c0\c85882;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c14902\c49804\c60000;\cssrgb\c0\c0\c100000;\cssrgb\c0\c6275\c50196;\cssrgb\c47451\c36863\c14902;\cssrgb\c0\c50196\c0;
\cssrgb\c63922\c8235\c8235;\cssrgb\c50196\c0\c0;\cssrgb\c100000\c0\c0;\cssrgb\c3529\c52549\c34510;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 using\cf4 \strokec4  \cf5 \strokec5 System\cf4 \strokec4 ;\cb1 \
\cf2 \cb3 \strokec2 using\cf4 \strokec4  \cf5 \strokec5 System\cf4 \strokec4 .\cf5 \strokec5 Collections\cf4 \strokec4 .\cf5 \strokec5 Generic\cf4 \strokec4 ;\cb1 \
\cf2 \cb3 \strokec2 using\cf4 \strokec4  \cf5 \strokec5 System\cf4 \strokec4 .\cf5 \strokec5 Linq\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf6 \cb3 \strokec6 namespace\cf4 \strokec4  \cf5 \strokec5 InvoiceRepository\cf4 \strokec4 .\cf5 \strokec5 Tests\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 \{\cb1 \
\cb3     \cf6 \strokec6 public\cf4 \strokec4  \cf6 \strokec6 class\cf4 \strokec4  \cf5 \strokec5 InvoiceRepository\cf4 \strokec4  : \cf5 \strokec5 IInvoiceRepository\cf4 \cb1 \strokec4 \
\cb3     \{\cb1 \
\cb3         \cf5 \strokec5 Dictionary\cf4 \strokec4 <\cf6 \strokec6 int\cf4 \strokec4 ,\cf5 \strokec5 Invoice\cf4 \strokec4 > \cf7 \strokec7 iMap\cf4 \strokec4  = \cf6 \strokec6 new\cf4 \strokec4  \cf5 \strokec5 Dictionary\cf4 \strokec4 <\cf6 \strokec6 int\cf4 \strokec4 ,\cf5 \strokec5 Invoice\cf4 \strokec4 >();\cb1 \
\
\cb3         \cf6 \strokec6 public\cf4 \strokec4  \cf8 \strokec8 InvoiceRepository\cf4 \strokec4 (\cf5 \strokec5 IQueryable\cf4 \strokec4 <\cf5 \strokec5 Invoice\cf4 \strokec4 > \cf7 \strokec7 invoices\cf4 \strokec4 )\cb1 \
\cb3         \{\cb1 \
\
\cb3             \cf2 \strokec2 foreach\cf4 \strokec4  (\cf5 \strokec5 Invoice\cf4 \strokec4  \cf7 \strokec7 i\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf7 \strokec7 invoices\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf9 \strokec9 //Invoice invoice = i;\cf4 \cb1 \strokec4 \
\cb3                 \cf9 \strokec9 /*\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf9 \cb3 \strokec9                 invoice.populate(\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9                     i.Id,\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9                     i.Description,\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9                     i.Number,\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9                     i.Seller,\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9                     i.Buyer,\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9                     i.CreationDate,\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9                     i.AcceptanceDate,\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9                     i.InvoiceItems);\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9                     */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3                 \cf2 \strokec2 if\cf4 \strokec4 (\cf7 \strokec7 i\cf4 \strokec4  != \cf6 \strokec6 null\cf4 \strokec4 ) \{\cb1 \
\cb3                     \cf7 \strokec7 iMap\cf4 \strokec4 .\cf8 \strokec8 Add\cf4 \strokec4 (\cf7 \strokec7 i\cf4 \strokec4 .\cf7 \strokec7 Id\cf4 \strokec4 ,  \cf7 \strokec7 i\cf4 \strokec4 );\cb1 \
\cb3                 \}\cb1 \
\cb3                  \cb1 \
\cb3             \}   \cb1 \
\cb3             \cf7 \strokec7 Console\cf4 \strokec4 .\cf8 \strokec8 WriteLine\cf4 \strokec4 (\cf10 \strokec10 "reena"\cf4 \strokec4 );\cb1 \
\cb3             \cf2 \strokec2 foreach\cf4 \strokec4 (\cf6 \strokec6 var\cf4 \strokec4  \cf7 \strokec7 key\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf7 \strokec7 iMap\cf4 \strokec4 )\{\cb1 \
\cb3                 \cf5 \strokec5 Invoice\cf4 \strokec4  \cf7 \strokec7 i\cf4 \strokec4  = \cf7 \strokec7 iMap\cf4 \strokec4 [\cf7 \strokec7 key\cf4 \strokec4 .\cf7 \strokec7 Key\cf4 \strokec4 ];\cb1 \
\cb3                 \cf7 \strokec7 Console\cf4 \strokec4 .\cf8 \strokec8 WriteLine\cf4 \strokec4 (\cf7 \strokec7 i\cf4 \strokec4 );\cb1 \
\cb3             \}\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf9 \strokec9 /// \cf11 \strokec11 <summary>\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 /// Should return a total value of an invoice with a given id. If an invoice does not exist null should be returned.\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 /// \cf11 \strokec11 </summary>\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 /// \cf11 \strokec11 <param\cf4 \strokec4  \cf12 \strokec12 name\cf4 \strokec4 =\cf10 \strokec10 "invoiceId"\cf11 \strokec11 ></param>\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 /// \cf11 \strokec11 <returns></returns>\cf4 \cb1 \strokec4 \
\cb3         \cf6 \strokec6 public\cf4 \strokec4  \cf6 \strokec6 decimal\cf4 \strokec4 ? \cf8 \strokec8 GetTotal\cf4 \strokec4 (\cf6 \strokec6 int\cf4 \strokec4  \cf7 \strokec7 invoiceId\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4 (\cf7 \strokec7 iMap\cf4 \strokec4 .\cf8 \strokec8 ContainsKey\cf4 \strokec4 (\cf7 \strokec7 invoiceId\cf4 \strokec4 )) \{\cb1 \
\cb3                 \cf5 \strokec5 Invoice\cf4 \strokec4  \cf7 \strokec7 invoice\cf4 \strokec4  = \cf7 \strokec7 iMap\cf4 \strokec4 [\cf7 \strokec7 invoiceId\cf4 \strokec4 ];\cb1 \
\cb3                 \cf5 \strokec5 IList\cf4 \strokec4 <\cf5 \strokec5 InvoiceItem\cf4 \strokec4 > \cf7 \strokec7 items\cf4 \strokec4  = \cf7 \strokec7 invoice\cf4 \strokec4 .\cf7 \strokec7 InvoiceItems\cf4 \strokec4 ;\cb1 \
\cb3                 \cf6 \strokec6 decimal\cf4 \strokec4 ? \cf7 \strokec7 sum\cf4 \strokec4  = \cf13 \strokec13 0\cf4 \strokec4 ;\cb1 \
\cb3                 \cf2 \strokec2 foreach\cf4 \strokec4 (\cf5 \strokec5 InvoiceItem\cf4 \strokec4  \cf7 \strokec7 i\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf7 \strokec7 items\cf4 \strokec4 ) \{\cb1 \
\cb3                     \cf7 \strokec7 sum\cf4 \strokec4  += \cf7 \strokec7 i\cf4 \strokec4 .\cf7 \strokec7 Price\cf4 \strokec4 ;\cb1 \
\cb3                 \}\cb1 \
\cb3                 \cf2 \strokec2 return\cf4 \strokec4  \cf7 \strokec7 sum\cf4 \strokec4 ;\cb1 \
\cb3             \}\cb1 \
\cb3             \cf2 \strokec2 return\cf4 \strokec4  \cf6 \strokec6 null\cf4 \strokec4 ;\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf9 \strokec9 /// \cf11 \strokec11 <summary>\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 /// Should return a total value of all unpaid invoices.\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 /// \cf11 \strokec11 </summary>\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 /// \cf11 \strokec11 <returns></returns>\cf4 \cb1 \strokec4 \
\cb3         \cf6 \strokec6 public\cf4 \strokec4  \cf6 \strokec6 decimal\cf4 \strokec4  \cf8 \strokec8 GetTotalOfUnpaid\cf4 \strokec4 ()\cb1 \
\cb3         \{\cb1 \
\cb3             \cf6 \strokec6 decimal\cf4 \strokec4 ? \cf7 \strokec7 sum\cf4 \strokec4  = \cf13 \strokec13 0\cf4 \strokec4 ;\cb1 \
\cb3             \cf2 \strokec2 foreach\cf4 \strokec4 (\cf6 \strokec6 var\cf4 \strokec4  \cf7 \strokec7 key\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf7 \strokec7 iMap\cf4 \strokec4 )\{\cb1 \
\cb3                 \cf7 \strokec7 sum\cf4 \strokec4  += \cf8 \strokec8 GetTotal\cf4 \strokec4 (\cf7 \strokec7 key\cf4 \strokec4 .\cf7 \strokec7 Key\cf4 \strokec4 );\cb1 \
\cb3             \}\cb1 \
\cb3             \cf2 \strokec2 return\cf4 \strokec4  \cf7 \strokec7 Convert\cf4 \strokec4 .\cf8 \strokec8 ToDecimal\cf4 \strokec4 (\cf7 \strokec7 sum\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf9 \strokec9 /// \cf11 \strokec11 <summary>\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 /// Should return a dictionary where the name of an invoice item is a key and the number of bought items is a value.\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 /// The number of bought items should be summed within a given period of time (from, to). Both the from date and the end date can be null.\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 /// \cf11 \strokec11 </summary>\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 /// \cf11 \strokec11 <param\cf4 \strokec4  \cf12 \strokec12 name\cf4 \strokec4 =\cf10 \strokec10 "from"\cf11 \strokec11 ></param>\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 /// \cf11 \strokec11 <param\cf4 \strokec4  \cf12 \strokec12 name\cf4 \strokec4 =\cf10 \strokec10 "to"\cf11 \strokec11 ></param>\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 /// \cf11 \strokec11 <returns></returns>\cf4 \cb1 \strokec4 \
\cb3         \cf6 \strokec6 public\cf4 \strokec4  \cf6 \strokec6 bool\cf4 \strokec4  \cf8 \strokec8 selectInvoice\cf4 \strokec4 (\cf5 \strokec5 DateTime\cf4 \strokec4 ? \cf7 \strokec7 from\cf4 \strokec4 , \cf5 \strokec5 DateTime\cf4 \strokec4 ? \cf7 \strokec7 to\cf4 \strokec4 , \cf5 \strokec5 Invoice\cf4 \strokec4  \cf7 \strokec7 i\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4 (\cf7 \strokec7 i\cf4 \strokec4  == \cf6 \strokec6 null\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf2 \strokec2 return\cf4 \strokec4  \cf6 \strokec6 false\cf4 \strokec4 ;\cb1 \
\cb3             \}\cb1 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4 (\cf7 \strokec7 from\cf4 \strokec4  == \cf6 \strokec6 null\cf4 \strokec4  && \cf7 \strokec7 to\cf4 \strokec4  == \cf6 \strokec6 null\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf2 \strokec2 return\cf4 \strokec4  \cf6 \strokec6 true\cf4 \strokec4 ;\cb1 \
\cb3             \} \cf2 \strokec2 else\cf4 \strokec4  \cf2 \strokec2 if\cf4 \strokec4 (\cf7 \strokec7 from\cf4 \strokec4  == \cf6 \strokec6 null\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf2 \strokec2 return\cf4 \strokec4  \cf7 \strokec7 to\cf4 \strokec4  < \cf7 \strokec7 i\cf4 \strokec4 .\cf7 \strokec7 AcceptanceDate\cf4 \strokec4 ;\cb1 \
\cb3             \} \cf2 \strokec2 else\cf4 \strokec4  \cf2 \strokec2 if\cf4 \strokec4 (\cf7 \strokec7 to\cf4 \strokec4  == \cf6 \strokec6 null\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf2 \strokec2 return\cf4 \strokec4  \cf7 \strokec7 from\cf4 \strokec4  > \cf7 \strokec7 i\cf4 \strokec4 .\cf7 \strokec7 CreationDate\cf4 \strokec4 ;\cb1 \
\cb3             \}\cf2 \strokec2 else\cf4 \strokec4  \{\cb1 \
\cb3                 \cf2 \strokec2 return\cf4 \strokec4  \cf7 \strokec7 from\cf4 \strokec4  > \cf7 \strokec7 i\cf4 \strokec4 .\cf7 \strokec7 CreationDate\cf4 \strokec4  && \cf7 \strokec7 to\cf4 \strokec4  < \cf7 \strokec7 i\cf4 \strokec4 .\cf7 \strokec7 AcceptanceDate\cf4 \strokec4 ;\cb1 \
\cb3             \}\cb1 \
\
\cb3         \}\cb1 \
\cb3         \cf6 \strokec6 public\cf4 \strokec4  \cf5 \strokec5 IReadOnlyDictionary\cf4 \strokec4 <\cf6 \strokec6 string\cf4 \strokec4 , \cf6 \strokec6 long\cf4 \strokec4 > \cf8 \strokec8 GetItemsReport\cf4 \strokec4 (\cf5 \strokec5 DateTime\cf4 \strokec4 ? \cf7 \strokec7 from\cf4 \strokec4 , \cf5 \strokec5 DateTime\cf4 \strokec4 ? \cf7 \strokec7 to\cf4 \strokec4 )\cb1 \
\cb3         \{\cb1 \
\cb3            \cf5 \strokec5 Dictionary\cf4 \strokec4 <\cf6 \strokec6 string\cf4 \strokec4 , \cf6 \strokec6 long\cf4 \strokec4 > \cf7 \strokec7 dict\cf4 \strokec4  = \cf6 \strokec6 new\cf4 \strokec4  \cf5 \strokec5 Dictionary\cf4 \strokec4 <\cf6 \strokec6 string\cf4 \strokec4 , \cf6 \strokec6 long\cf4 \strokec4 >();\cb1 \
\
\cb3             \cf2 \strokec2 foreach\cf4 \strokec4 (\cf6 \strokec6 var\cf4 \strokec4  \cf7 \strokec7 key\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf7 \strokec7 iMap\cf4 \strokec4 )\{\cb1 \
\cb3                 \cf5 \strokec5 Invoice\cf4 \strokec4  \cf7 \strokec7 invoice\cf4 \strokec4  = \cf7 \strokec7 iMap\cf4 \strokec4 [\cf7 \strokec7 key\cf4 \strokec4 .\cf7 \strokec7 Key\cf4 \strokec4 ];\cb1 \
\cb3                 \cf2 \strokec2 if\cf4 \strokec4 (\cf8 \strokec8 selectInvoice\cf4 \strokec4 (\cf7 \strokec7 from\cf4 \strokec4 , \cf7 \strokec7 to\cf4 \strokec4 , \cf7 \strokec7 invoice\cf4 \strokec4 ) == \cf6 \strokec6 true\cf4 \strokec4 ) \{ \cb1 \
\
\cb3                     \cf5 \strokec5 IList\cf4 \strokec4 <\cf5 \strokec5 InvoiceItem\cf4 \strokec4 > \cf7 \strokec7 items\cf4 \strokec4  = \cf7 \strokec7 invoice\cf4 \strokec4 .\cf7 \strokec7 InvoiceItems\cf4 \strokec4 ;\cb1 \
\cb3                     \cf2 \strokec2 foreach\cf4 \strokec4 (\cf5 \strokec5 InvoiceItem\cf4 \strokec4  \cf7 \strokec7 i\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf7 \strokec7 items\cf4 \strokec4 ) \{\cb1 \
\cb3                         \cf2 \strokec2 if\cf4 \strokec4 (\cf7 \strokec7 dict\cf4 \strokec4 .\cf8 \strokec8 ContainsKey\cf4 \strokec4 (\cf7 \strokec7 i\cf4 \strokec4 .\cf7 \strokec7 Name\cf4 \strokec4 ) == \cf6 \strokec6 false\cf4 \strokec4 ) \{\cb1 \
\cb3                             \cf7 \strokec7 dict\cf4 \strokec4 .\cf8 \strokec8 Add\cf4 \strokec4 (\cf7 \strokec7 i\cf4 \strokec4 .\cf7 \strokec7 Name\cf4 \strokec4 ,\cf7 \strokec7 i\cf4 \strokec4 .\cf7 \strokec7 Count\cf4 \strokec4 );\cb1 \
\cb3                         \} \cf2 \strokec2 else\cf4 \strokec4  \{\cb1 \
\cb3                             \cf6 \strokec6 long\cf4 \strokec4  \cf7 \strokec7 count\cf4 \strokec4  = \cf7 \strokec7 dict\cf4 \strokec4 [\cf7 \strokec7 i\cf4 \strokec4 .\cf7 \strokec7 Name\cf4 \strokec4 ];\cb1 \
\cb3                             \cf7 \strokec7 dict\cf4 \strokec4 .\cf8 \strokec8 Remove\cf4 \strokec4 (\cf7 \strokec7 i\cf4 \strokec4 .\cf7 \strokec7 Name\cf4 \strokec4 );\cb1 \
\cb3                             \cf7 \strokec7 dict\cf4 \strokec4 .\cf8 \strokec8 Add\cf4 \strokec4 (\cf7 \strokec7 i\cf4 \strokec4 .\cf7 \strokec7 Name\cf4 \strokec4 , \cf7 \strokec7 i\cf4 \strokec4 .\cf7 \strokec7 Count\cf4 \strokec4 +\cf7 \strokec7 count\cf4 \strokec4 );\cb1 \
\cb3                         \}\cb1 \
\
\cb3                     \}\cb1 \
\cb3                 \}\cb1 \
\cb3             \}\cb1 \
\cb3             \cf5 \strokec5 IReadOnlyDictionary\cf4 \strokec4 <\cf6 \strokec6 string\cf4 \strokec4 , \cf6 \strokec6 long\cf4 \strokec4 > \cf7 \strokec7 rdict\cf4 \strokec4  = \cf6 \strokec6 new\cf4 \strokec4  \cf5 \strokec5 Dictionary\cf4 \strokec4 <\cf6 \strokec6 string\cf4 \strokec4 , \cf6 \strokec6 long\cf4 \strokec4 >(\cf7 \strokec7 dict\cf4 \strokec4 );\cb1 \
\cb3             \cf2 \strokec2 return\cf4 \strokec4  \cf7 \strokec7 rdict\cf4 \strokec4 ;\cb1 \
\cb3         \}\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf6 \cb3 \strokec6 public\cf4 \strokec4  \cf6 \strokec6 class\cf4 \strokec4  \cf5 \strokec5 Invoice\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 \{\cb1 \
\cb3     \cf9 \strokec9 // A unique numerical identifier of an invoice (mandatory)\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 public\cf4 \strokec4  \cf6 \strokec6 int\cf4 \strokec4  \cf7 \strokec7 Id\cf4 \strokec4  \{ \cf6 \strokec6 get\cf4 \strokec4 ; \cf6 \strokec6 set\cf4 \strokec4 ; \}\cb1 \
\cb3     \cf9 \strokec9 // A short description of an invoice (optional).\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 public\cf4 \strokec4  \cf6 \strokec6 string\cf4 \strokec4  \cf7 \strokec7 Description\cf4 \strokec4  \{ \cf6 \strokec6 get\cf4 \strokec4 ; \cf6 \strokec6 set\cf4 \strokec4 ; \}\cb1 \
\cb3     \cf9 \strokec9 // A number of an invoice e.g. 134/10/2018 (mandatory).\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 public\cf4 \strokec4  \cf6 \strokec6 string\cf4 \strokec4  \cf7 \strokec7 Number\cf4 \strokec4  \{ \cf6 \strokec6 get\cf4 \strokec4 ; \cf6 \strokec6 set\cf4 \strokec4 ; \}\cb1 \
\cb3     \cf9 \strokec9 // An issuer of an invoice e.g. Metz-Anderson, 600  Hickman Street,Illinois (mandatory).\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 public\cf4 \strokec4  \cf6 \strokec6 string\cf4 \strokec4  \cf7 \strokec7 Seller\cf4 \strokec4  \{ \cf6 \strokec6 get\cf4 \strokec4 ; \cf6 \strokec6 set\cf4 \strokec4 ; \}\cb1 \
\cb3     \cf9 \strokec9 // A buyer of a service or a product e.g. John Smith, 4285  Deercove Drive, Dallas (mandatory).\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 public\cf4 \strokec4  \cf6 \strokec6 string\cf4 \strokec4  \cf7 \strokec7 Buyer\cf4 \strokec4  \{ \cf6 \strokec6 get\cf4 \strokec4 ; \cf6 \strokec6 set\cf4 \strokec4 ; \}\cb1 \
\cb3     \cf9 \strokec9 // A date when an invoice was issued (mandatory).\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 public\cf4 \strokec4  \cf5 \strokec5 DateTime\cf4 \strokec4  \cf7 \strokec7 CreationDate\cf4 \strokec4  \{ \cf6 \strokec6 get\cf4 \strokec4 ; \cf6 \strokec6 set\cf4 \strokec4 ; \}\cb1 \
\cb3     \cf9 \strokec9 // A date when an invoice was paid (optional).\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 public\cf4 \strokec4  \cf5 \strokec5 DateTime\cf4 \strokec4 ? \cf7 \strokec7 AcceptanceDate\cf4 \strokec4  \{ \cf6 \strokec6 get\cf4 \strokec4 ; \cf6 \strokec6 set\cf4 \strokec4 ; \}\cb1 \
\cb3     \cf9 \strokec9 // A collection of invoice items for a given invoice (can be empty but is never null).\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 public\cf4 \strokec4  \cf5 \strokec5 IList\cf4 \strokec4 <\cf5 \strokec5 InvoiceItem\cf4 \strokec4 > \cf7 \strokec7 InvoiceItems\cf4 \strokec4  \{ \cf6 \strokec6 get\cf4 \strokec4 ; \}\cb1 \
\
\cb3     \cf9 \strokec9 //public Invoice() \{\}\cf4 \cb1 \strokec4 \
\
\cb3     \cf6 \strokec6 public\cf4 \strokec4  \cf8 \strokec8 Invoice\cf4 \strokec4 ()\{\cb1 \
\cb3         \cf7 \strokec7 InvoiceItems\cf4 \strokec4  = \cf6 \strokec6 new\cf4 \strokec4  \cf5 \strokec5 List\cf4 \strokec4 <\cf5 \strokec5 InvoiceItem\cf4 \strokec4 >();\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf6 \strokec6 public\cf4 \strokec4  \cf6 \strokec6 void\cf4 \strokec4  \cf8 \strokec8 populate\cf4 \strokec4 (\cf6 \strokec6 int\cf4 \strokec4  \cf7 \strokec7 id\cf4 \strokec4 , \cb1 \
\cb3                             \cf6 \strokec6 string\cf4 \strokec4  \cf7 \strokec7 description\cf4 \strokec4 , \cb1 \
\cb3                             \cf6 \strokec6 string\cf4 \strokec4  \cf7 \strokec7 number\cf4 \strokec4 ,\cb1 \
\cb3                             \cf6 \strokec6 string\cf4 \strokec4  \cf7 \strokec7 seller\cf4 \strokec4 , \cb1 \
\cb3                             \cf6 \strokec6 string\cf4 \strokec4  \cf7 \strokec7 buyer\cf4 \strokec4 ,\cb1 \
\cb3                             \cf5 \strokec5 DateTime\cf4 \strokec4  \cf7 \strokec7 create\cf4 \strokec4 , \cb1 \
\cb3                             \cf5 \strokec5 DateTime\cf4 \strokec4  \cf7 \strokec7 accept\cf4 \strokec4 , \cb1 \
\cb3                             \cf5 \strokec5 IList\cf4 \strokec4 <\cf5 \strokec5 InvoiceItem\cf4 \strokec4 > \cf7 \strokec7 list\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf6 \strokec6 this\cf4 \strokec4 .\cf7 \strokec7 Id\cf4 \strokec4  = \cf7 \strokec7 id\cf4 \strokec4 ;\cb1 \
\cb3         \cf6 \strokec6 this\cf4 \strokec4 .\cf7 \strokec7 Description\cf4 \strokec4  = \cf7 \strokec7 description\cf4 \strokec4 ;\cb1 \
\cb3         \cf6 \strokec6 this\cf4 \strokec4 .\cf7 \strokec7 Number\cf4 \strokec4  = \cf7 \strokec7 number\cf4 \strokec4 ;\cb1 \
\cb3         \cf6 \strokec6 this\cf4 \strokec4 .\cf7 \strokec7 Seller\cf4 \strokec4  = \cf7 \strokec7 seller\cf4 \strokec4 ;\cb1 \
\cb3         \cf6 \strokec6 this\cf4 \strokec4 .\cf7 \strokec7 Buyer\cf4 \strokec4  = \cf7 \strokec7 buyer\cf4 \strokec4 ;\cb1 \
\cb3         \cf6 \strokec6 this\cf4 \strokec4 .\cf7 \strokec7 CreationDate\cf4 \strokec4  = \cf7 \strokec7 create\cf4 \strokec4 ;\cb1 \
\cb3         \cf6 \strokec6 this\cf4 \strokec4 .\cf7 \strokec7 AcceptanceDate\cf4 \strokec4  = \cf7 \strokec7 accept\cf4 \strokec4 ;\cb1 \
\cb3         \cf9 \strokec9 //this.InvoiceItems = list;\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 /*\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf9 \cb3 \strokec9         foreach(InvoiceItem l in list) \{\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9             this.InvoiceItems.Add(new InvoiceItem(l.Name,l.Count,l.Price));\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9         \} // foreach\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9         */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \} \cf9 \strokec9 // populate\cf4 \cb1 \strokec4 \
\cb3 \} \cf9 \strokec9 // class\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf6 \cb3 \strokec6 public\cf4 \strokec4  \cf6 \strokec6 class\cf4 \strokec4  \cf5 \strokec5 InvoiceItem\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 \{\cb1 \
\cb3     \cf9 \strokec9 // A name of an item e.g. eggs.\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 public\cf4 \strokec4  \cf6 \strokec6 string\cf4 \strokec4  \cf7 \strokec7 Name\cf4 \strokec4  \{ \cf6 \strokec6 get\cf4 \strokec4 ; \cf6 \strokec6 set\cf4 \strokec4 ; \}\cb1 \
\cb3     \cf9 \strokec9 // A number of bought items e.g. 10.\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 public\cf4 \strokec4  \cf6 \strokec6 long\cf4 \strokec4  \cf7 \strokec7 Count\cf4 \strokec4  \{ \cf6 \strokec6 get\cf4 \strokec4 ; \cf6 \strokec6 set\cf4 \strokec4 ; \}\cb1 \
\cb3     \cf9 \strokec9 // A price of an item e.g. 20.5.\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 public\cf4 \strokec4  \cf6 \strokec6 decimal\cf4 \strokec4  \cf7 \strokec7 Price\cf4 \strokec4  \{ \cf6 \strokec6 get\cf4 \strokec4 ; \cf6 \strokec6 set\cf4 \strokec4 ; \}\cb1 \
\
\cb3     \cf6 \strokec6 public\cf4 \strokec4  \cf8 \strokec8 InvoiceItem\cf4 \strokec4 (\cf6 \strokec6 string\cf4 \strokec4  \cf7 \strokec7 name\cf4 \strokec4 , \cf6 \strokec6 long\cf4 \strokec4  \cf7 \strokec7 count\cf4 \strokec4 , \cf6 \strokec6 decimal\cf4 \strokec4  \cf7 \strokec7 price\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf6 \strokec6 this\cf4 \strokec4 .\cf7 \strokec7 Name\cf4 \strokec4  = \cf7 \strokec7 name\cf4 \strokec4 ;\cb1 \
\cb3         \cf6 \strokec6 this\cf4 \strokec4 .\cf7 \strokec7 Count\cf4 \strokec4  = \cf7 \strokec7 count\cf4 \strokec4 ;\cb1 \
\cb3         \cf6 \strokec6 this\cf4 \strokec4 .\cf7 \strokec7 Price\cf4 \strokec4  = \cf7 \strokec7 price\cf4 \strokec4 ;\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\
}